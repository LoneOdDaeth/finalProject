import dash
from dash import dcc, html
import dash_bootstrap_components as dbc
from dash.dependencies import Input, Output

# Dash UygulamasÄ±nÄ± BaÅŸlat
app = dash.Dash(__name__, external_stylesheets=[dbc.themes.DARKLY])  # Dark Tema KullanÄ±yoruz

# Navbar (Ãœst MenÃ¼) - YeÅŸil Vurgulu
navbar = dbc.NavbarSimple(
    children=[
        dbc.NavItem(dbc.NavLink("Ana Sayfa", href="/")),
        dbc.NavItem(dbc.NavLink("Analiz", href="/analysis")),
        dbc.NavItem(dbc.NavLink("Profil", href="/profile")),
        dbc.NavItem(dbc.NavLink("DÄ±ÅŸa Aktarma & Mail", href="/export"))
    ],
    brand="PCAP Analiz ArayÃ¼zÃ¼",
    brand_href="/",
    color="#222222",
    dark=True,
)

# Genel Sayfa Stili - Arka Plan Siyah ve Tam Ekran
page_style = {
    "backgroundColor": "#000000",  # âœ… Tamamen Siyah Arka Plan
    "color": "#00FF00",
    "display": "flex",
    "flexDirection": "column",
    "alignItems": "center",  # Ä°Ã§eriÄŸi yatayda ortala
    "justifyContent": "center",  # Ä°Ã§eriÄŸi dikeyde ortala
    "padding": "100px",
    "font-family": "Arial, sans-serif"
}

# Ana Sayfa (PCAP YÃ¼kleme ve Resim Ekleme)
home_layout = html.Div([
    dbc.Row([
        dbc.Col(
            dcc.Upload(
                id="upload-pcap",
                children=html.Button("PCAP DosyasÄ± SeÃ§", className="btn btn-success"),
                multiple=False
            ),
            width={"size": 2, "offset": 0},  # âœ… Buton Sol Ãœstte NavbarÄ±n AltÄ±nda
        )
    ], style={"width": "100%", "justifyContent": "start"}),  # âœ… Butonu sola yasla

    html.Div([
        html.H2("PCAP Analiz ArayÃ¼zÃ¼ne HoÅŸ Geldiniz", style={
            "text-align": "center",
            "color": "#00FF00",
            "margin-top": "auto",
            "margin-bottom": "20px"
        }),

        html.P("LÃ¼tfen analiz etmek istediÄŸiniz PCAP dosyanÄ±zÄ± yÃ¼kleyin.",
               style={"text-align": "center"}),
    ], style={"width": "100%"}),

    # Resimleri Daha AÅŸaÄŸÄ± ve Esnek YerleÅŸtirme
    dbc.Row([
        dbc.Col(html.Img(src="/assets/img/ip_sutun.png", 
                         style={"width": "500px", "height": "300px", "margin": "10px"}), 
                width=4, style={"text-align": "left"}),  # âœ… Sol Tarafa Yasla
        
        dbc.Col(html.Img(src="/assets/img/pasta.png", 
                         style={"width": "400px", "height": "300px", "margin": "10px"}), 
                width=4, style={"text-align": "center"}),  # âœ… Ortada
        
        dbc.Col(html.Img(src="/assets/img/zaman.png", 
                         style={"width": "500px", "height": "300px", "margin": "10px"}), 
                width=4, style={"text-align": "right"})  # âœ… SaÄŸa Yasla
    ], style={"margin-top": "125px"})  # âœ… Resimleri Daha AÅŸaÄŸÄ± Ä°ndir

], style=page_style)

# Analiz SayfasÄ±
analysis_layout = html.Div([
    html.H2("Analiz SayfasÄ±", style={"text-align": "center", "color": "#00FF00"}),
    html.P("YÃ¼klenen PCAP dosyasÄ± burada analiz edilecektir."),
    html.Div(id="analysis-output")
], style=page_style)

# Profil SayfasÄ±
profile_layout = html.Div([
    html.H2("KullanÄ±cÄ± Profili", style={"text-align": "center", "color": "#00FF00"}),
    html.P("Burada kullanÄ±cÄ± bilgilerini ve kayÄ±tlÄ± analizleri gÃ¶rebileceksiniz."),
    html.Div(id="profile-output")
], style=page_style)

# DÄ±ÅŸa Aktarma & Mail SayfasÄ±
export_layout = html.Div([
    html.H2("DÄ±ÅŸa Aktarma ve Mail GÃ¶nderme", style={"text-align": "center", "color": "#00FF00"}),
    html.P("SeÃ§tiÄŸiniz analizleri PDF olarak dÄ±ÅŸa aktarabilir ve yÃ¶neticinize e-posta ile gÃ¶nderebilirsiniz."),
    dbc.Button("ðŸ“„ PDF OluÅŸtur", id="generate-pdf", color="success"),
    dbc.Button("ðŸ“© Mail GÃ¶nder", id="send-mail", color="info"),
    html.Div(id="export-output")
], style=page_style)

# Sayfa Ä°Ã§eriÄŸi GÃ¼ncelleme
app.layout = html.Div([
    dcc.Location(id="url", refresh=False),
    navbar,
    html.Div(id="page-content")
])

# Sayfa YÃ¶nlendirme
@app.callback(
    Output("page-content", "children"),
    [Input("url", "pathname")]
)
def display_page(pathname):
    if pathname == "/analysis":
        return analysis_layout
    elif pathname == "/profile":
        return profile_layout
    elif pathname == "/export":
        return export_layout
    else:
        return home_layout

# UygulamayÄ± Ã‡alÄ±ÅŸtÄ±r
if __name__ == "__main__":
    app.run(debug=True)
